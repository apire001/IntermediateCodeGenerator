Terminals unused in grammar

   NEWLINE


Grammar

    0 $accept: input $end

    1 input: funcs

    2 funcs: %empty
    3      | func funcs

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY

    5 decs: %empty
    6     | dec SEMICOLON decs

    7 dec: idents COLON INTEGER
    8    | idents COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    9 idents: ident
   10       | ident COMMA idents

   11 ident: IDENTIFIER

   12 stats: %empty
   13      | stat SEMICOLON stats

   14 stat: READ vars
   15     | vars ASSIGN expr
   16     | CONTINUE
   17     | IF bool_expr THEN stats ENDIF
   18     | DO BEGINLOOP stats ENDLOOP WHILE bool_expr
   19     | WRITE vars
   20     | RETURN expr
   21     | IF bool_expr THEN stats ELSE stats ENDIF
   22     | WHILE bool_expr BEGINLOOP stats ENDLOOP

   23 vars: var
   24     | var COMMA vars

   25 var: ident
   26    | ident L_BRACKET expr R_BRACKET

   27 expr: mult_expr
   28     | expr ADD mult_expr
   29     | expr SUB mult_expr

   30 mult_expr: term
   31          | mult_expr MOD term
   32          | mult_expr DIV term
   33          | mult_expr MULT term

   34 exprs: expr
   35      | expr COMMA exprs

   36 term: var
   37     | NUMBER
   38     | L_PAREN expr R_PAREN
   39     | SUB var
   40     | SUB NUMBER
   41     | SUB L_PAREN expr R_PAREN
   42     | ident L_PAREN exprs R_PAREN

   43 comp: EQ
   44     | LT
   45     | GT
   46     | GTE
   47     | LTE
   48     | NEQ

   49 bool_expr: rel_and_expr
   50          | bool_expr OR rel_and_expr

   51 rel_and_expr: rel_expr
   52             | rel_and_expr AND rel_expr

   53 rel_expr: expr comp expr
   54         | TRUE
   55         | FALSE
   56         | L_PAREN bool_expr R_PAREN
   57         | NOT expr comp expr
   58         | NOT TRUE
   59         | NOT FALSE
   60         | NOT L_PAREN bool_expr R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGINPARAM (259) 4
ENDPARAM (260) 4
SEMICOLON (261) 4 6 13
COLON (262) 7 8
INTEGER (263) 7 8
BEGINLOCALS (264) 4
ENDLOCALS (265) 4
BEGINBODY (266) 4
ENDBODY (267) 4
ARRAY (268) 8
OF (269) 8
IF (270) 17 21
THEN (271) 17 21
ENDIF (272) 17 21
ELSE (273) 21
WHILE (274) 18 22
DO (275) 18
BEGINLOOP (276) 18 22
ENDLOOP (277) 18 22
CONTINUE (278) 16
READ (279) 14
WRITE (280) 19
AND (281) 52
OR (282) 50
NOT (283) 57 58 59 60
TRUE (284) 54 58
FALSE (285) 55 59
RETURN (286) 20
SUB (287) 29 39 40 41
ADD (288) 28
MULT (289) 33
DIV (290) 32
MOD (291) 31
EQ (292) 43
NEQ (293) 48
LT (294) 44
GT (295) 45
LTE (296) 47
GTE (297) 46
COMMA (298) 10 24 35
R_PAREN (299) 38 41 42 56 60
L_PAREN (300) 38 41 42 56 60
L_BRACKET (301) 8 26
R_BRACKET (302) 8 26
ASSIGN (303) 15
NEWLINE (304)
NUMBER (305) 8 37 40
IDENTIFIER (306) 11


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
input (53)
    on left: 1, on right: 0
funcs (54)
    on left: 2 3, on right: 1 3
func (55)
    on left: 4, on right: 3
decs (56)
    on left: 5 6, on right: 4 6
dec (57)
    on left: 7 8, on right: 6
idents (58)
    on left: 9 10, on right: 7 8 10
ident (59)
    on left: 11, on right: 4 9 10 25 26 42
stats (60)
    on left: 12 13, on right: 4 13 17 18 21 22
stat (61)
    on left: 14 15 16 17 18 19 20 21 22, on right: 13
vars (62)
    on left: 23 24, on right: 14 15 19 24
var (63)
    on left: 25 26, on right: 23 24 36 39
expr (64)
    on left: 27 28 29, on right: 15 20 26 28 29 34 35 38 41 53 57
mult_expr (65)
    on left: 30 31 32 33, on right: 27 28 29 31 32 33
exprs (66)
    on left: 34 35, on right: 35 42
term (67)
    on left: 36 37 38 39 40 41 42, on right: 30 31 32 33
comp (68)
    on left: 43 44 45 46 47 48, on right: 53 57
bool_expr (69)
    on left: 49 50, on right: 17 18 21 22 50 56 60
rel_and_expr (70)
    on left: 51 52, on right: 49 50 52
rel_expr (71)
    on left: 53 54 55 56 57 58 59 60, on right: 51 52


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (funcs)

    input  go to state 2
    funcs  go to state 3
    func   go to state 4


State 1

    4 func: FUNCTION . ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY

    IDENTIFIER  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: input . $end

    $end  shift, and go to state 7


State 3

    1 input: funcs .

    $default  reduce using rule 1 (input)


State 4

    3 funcs: func . funcs

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (funcs)

    funcs  go to state 8
    func   go to state 4


State 5

   11 ident: IDENTIFIER .

    $default  reduce using rule 11 (ident)


State 6

    4 func: FUNCTION ident . SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: input $end .

    $default  accept


State 8

    3 funcs: func funcs .

    $default  reduce using rule 3 (funcs)


State 9

    4 func: FUNCTION ident SEMICOLON . BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY

    BEGINPARAM  shift, and go to state 10


State 10

    4 func: FUNCTION ident SEMICOLON BEGINPARAM . decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY

    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 5 (decs)

    decs    go to state 11
    dec     go to state 12
    idents  go to state 13
    ident   go to state 14


State 11

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs . ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY

    ENDPARAM  shift, and go to state 15


State 12

    6 decs: dec . SEMICOLON decs

    SEMICOLON  shift, and go to state 16


State 13

    7 dec: idents . COLON INTEGER
    8    | idents . COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    9 idents: ident .
   10       | ident . COMMA idents

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (idents)


State 15

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM . BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY

    BEGINLOCALS  shift, and go to state 19


State 16

    6 decs: dec SEMICOLON . decs

    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 5 (decs)

    decs    go to state 20
    dec     go to state 12
    idents  go to state 13
    ident   go to state 14


State 17

    7 dec: idents COLON . INTEGER
    8    | idents COLON . ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 idents: ident COMMA . idents

    IDENTIFIER  shift, and go to state 5

    idents  go to state 23
    ident   go to state 14


State 19

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS . decs ENDLOCALS BEGINBODY stats ENDBODY

    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 5 (decs)

    decs    go to state 24
    dec     go to state 12
    idents  go to state 13
    ident   go to state 14


State 20

    6 decs: dec SEMICOLON decs .

    $default  reduce using rule 6 (decs)


State 21

    7 dec: idents COLON INTEGER .

    $default  reduce using rule 7 (dec)


State 22

    8 dec: idents COLON ARRAY . L_BRACKET NUMBER R_BRACKET OF INTEGER

    L_BRACKET  shift, and go to state 25


State 23

   10 idents: ident COMMA idents .

    $default  reduce using rule 10 (idents)


State 24

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs . ENDLOCALS BEGINBODY stats ENDBODY

    ENDLOCALS  shift, and go to state 26


State 25

    8 dec: idents COLON ARRAY L_BRACKET . NUMBER R_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS . BEGINBODY stats ENDBODY

    BEGINBODY  shift, and go to state 28


State 27

    8 dec: idents COLON ARRAY L_BRACKET NUMBER . R_BRACKET OF INTEGER

    R_BRACKET  shift, and go to state 29


State 28

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY . stats ENDBODY

    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 12 (stats)

    ident  go to state 37
    stats  go to state 38
    stat   go to state 39
    vars   go to state 40
    var    go to state 41


State 29

    8 dec: idents COLON ARRAY L_BRACKET NUMBER R_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 30

   17 stat: IF . bool_expr THEN stats ENDIF
   21     | IF . bool_expr THEN stats ELSE stats ENDIF

    NOT         shift, and go to state 43
    TRUE        shift, and go to state 44
    FALSE       shift, and go to state 45
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 47
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident         go to state 49
    var           go to state 50
    expr          go to state 51
    mult_expr     go to state 52
    term          go to state 53
    bool_expr     go to state 54
    rel_and_expr  go to state 55
    rel_expr      go to state 56


State 31

   22 stat: WHILE . bool_expr BEGINLOOP stats ENDLOOP

    NOT         shift, and go to state 43
    TRUE        shift, and go to state 44
    FALSE       shift, and go to state 45
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 47
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident         go to state 49
    var           go to state 50
    expr          go to state 51
    mult_expr     go to state 52
    term          go to state 53
    bool_expr     go to state 57
    rel_and_expr  go to state 55
    rel_expr      go to state 56


State 32

   18 stat: DO . BEGINLOOP stats ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 58


State 33

   16 stat: CONTINUE .

    $default  reduce using rule 16 (stat)


State 34

   14 stat: READ . vars

    IDENTIFIER  shift, and go to state 5

    ident  go to state 37
    vars   go to state 59
    var    go to state 41


State 35

   19 stat: WRITE . vars

    IDENTIFIER  shift, and go to state 5

    ident  go to state 37
    vars   go to state 60
    var    go to state 41


State 36

   20 stat: RETURN . expr

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 62
    mult_expr  go to state 52
    term       go to state 53


State 37

   25 var: ident .
   26    | ident . L_BRACKET expr R_BRACKET

    L_BRACKET  shift, and go to state 63

    $default  reduce using rule 25 (var)


State 38

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats . ENDBODY

    ENDBODY  shift, and go to state 64


State 39

   13 stats: stat . SEMICOLON stats

    SEMICOLON  shift, and go to state 65


State 40

   15 stat: vars . ASSIGN expr

    ASSIGN  shift, and go to state 66


State 41

   23 vars: var .
   24     | var . COMMA vars

    COMMA  shift, and go to state 67

    $default  reduce using rule 23 (vars)


State 42

    8 dec: idents COLON ARRAY L_BRACKET NUMBER R_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 68


State 43

   57 rel_expr: NOT . expr comp expr
   58         | NOT . TRUE
   59         | NOT . FALSE
   60         | NOT . L_PAREN bool_expr R_PAREN

    TRUE        shift, and go to state 69
    FALSE       shift, and go to state 70
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 71
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 72
    mult_expr  go to state 52
    term       go to state 53


State 44

   54 rel_expr: TRUE .

    $default  reduce using rule 54 (rel_expr)


State 45

   55 rel_expr: FALSE .

    $default  reduce using rule 55 (rel_expr)


State 46

   39 term: SUB . var
   40     | SUB . NUMBER
   41     | SUB . L_PAREN expr R_PAREN

    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 74
    IDENTIFIER  shift, and go to state 5

    ident  go to state 37
    var    go to state 75


State 47

   38 term: L_PAREN . expr R_PAREN
   56 rel_expr: L_PAREN . bool_expr R_PAREN

    NOT         shift, and go to state 43
    TRUE        shift, and go to state 44
    FALSE       shift, and go to state 45
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 47
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident         go to state 49
    var           go to state 50
    expr          go to state 76
    mult_expr     go to state 52
    term          go to state 53
    bool_expr     go to state 77
    rel_and_expr  go to state 55
    rel_expr      go to state 56


State 48

   37 term: NUMBER .

    $default  reduce using rule 37 (term)


State 49

   25 var: ident .
   26    | ident . L_BRACKET expr R_BRACKET
   42 term: ident . L_PAREN exprs R_PAREN

    L_PAREN    shift, and go to state 78
    L_BRACKET  shift, and go to state 63

    $default  reduce using rule 25 (var)


State 50

   36 term: var .

    $default  reduce using rule 36 (term)


State 51

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   53 rel_expr: expr . comp expr

    SUB  shift, and go to state 79
    ADD  shift, and go to state 80
    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 87


State 52

   27 expr: mult_expr .
   31 mult_expr: mult_expr . MOD term
   32          | mult_expr . DIV term
   33          | mult_expr . MULT term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 27 (expr)


State 53

   30 mult_expr: term .

    $default  reduce using rule 30 (mult_expr)


State 54

   17 stat: IF bool_expr . THEN stats ENDIF
   21     | IF bool_expr . THEN stats ELSE stats ENDIF
   50 bool_expr: bool_expr . OR rel_and_expr

    THEN  shift, and go to state 91
    OR    shift, and go to state 92


State 55

   49 bool_expr: rel_and_expr .
   52 rel_and_expr: rel_and_expr . AND rel_expr

    AND  shift, and go to state 93

    $default  reduce using rule 49 (bool_expr)


State 56

   51 rel_and_expr: rel_expr .

    $default  reduce using rule 51 (rel_and_expr)


State 57

   22 stat: WHILE bool_expr . BEGINLOOP stats ENDLOOP
   50 bool_expr: bool_expr . OR rel_and_expr

    BEGINLOOP  shift, and go to state 94
    OR         shift, and go to state 92


State 58

   18 stat: DO BEGINLOOP . stats ENDLOOP WHILE bool_expr

    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 12 (stats)

    ident  go to state 37
    stats  go to state 95
    stat   go to state 39
    vars   go to state 40
    var    go to state 41


State 59

   14 stat: READ vars .

    $default  reduce using rule 14 (stat)


State 60

   19 stat: WRITE vars .

    $default  reduce using rule 19 (stat)


State 61

   38 term: L_PAREN . expr R_PAREN

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 96
    mult_expr  go to state 52
    term       go to state 53


State 62

   20 stat: RETURN expr .
   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr

    SUB  shift, and go to state 79
    ADD  shift, and go to state 80

    $default  reduce using rule 20 (stat)


State 63

   26 var: ident L_BRACKET . expr R_BRACKET

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 97
    mult_expr  go to state 52
    term       go to state 53


State 64

    4 func: FUNCTION ident SEMICOLON BEGINPARAM decs ENDPARAM BEGINLOCALS decs ENDLOCALS BEGINBODY stats ENDBODY .

    $default  reduce using rule 4 (func)


State 65

   13 stats: stat SEMICOLON . stats

    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 12 (stats)

    ident  go to state 37
    stats  go to state 98
    stat   go to state 39
    vars   go to state 40
    var    go to state 41


State 66

   15 stat: vars ASSIGN . expr

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 99
    mult_expr  go to state 52
    term       go to state 53


State 67

   24 vars: var COMMA . vars

    IDENTIFIER  shift, and go to state 5

    ident  go to state 37
    vars   go to state 100
    var    go to state 41


State 68

    8 dec: idents COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER .

    $default  reduce using rule 8 (dec)


State 69

   58 rel_expr: NOT TRUE .

    $default  reduce using rule 58 (rel_expr)


State 70

   59 rel_expr: NOT FALSE .

    $default  reduce using rule 59 (rel_expr)


State 71

   38 term: L_PAREN . expr R_PAREN
   60 rel_expr: NOT L_PAREN . bool_expr R_PAREN

    NOT         shift, and go to state 43
    TRUE        shift, and go to state 44
    FALSE       shift, and go to state 45
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 47
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident         go to state 49
    var           go to state 50
    expr          go to state 76
    mult_expr     go to state 52
    term          go to state 53
    bool_expr     go to state 101
    rel_and_expr  go to state 55
    rel_expr      go to state 56


State 72

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   57 rel_expr: NOT expr . comp expr

    SUB  shift, and go to state 79
    ADD  shift, and go to state 80
    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 102


State 73

   41 term: SUB L_PAREN . expr R_PAREN

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 103
    mult_expr  go to state 52
    term       go to state 53


State 74

   40 term: SUB NUMBER .

    $default  reduce using rule 40 (term)


State 75

   39 term: SUB var .

    $default  reduce using rule 39 (term)


State 76

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   38 term: L_PAREN expr . R_PAREN
   53 rel_expr: expr . comp expr

    SUB      shift, and go to state 79
    ADD      shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    LT       shift, and go to state 83
    GT       shift, and go to state 84
    LTE      shift, and go to state 85
    GTE      shift, and go to state 86
    R_PAREN  shift, and go to state 104

    comp  go to state 87


State 77

   50 bool_expr: bool_expr . OR rel_and_expr
   56 rel_expr: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 92
    R_PAREN  shift, and go to state 105


State 78

   42 term: ident L_PAREN . exprs R_PAREN

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 106
    mult_expr  go to state 52
    exprs      go to state 107
    term       go to state 53


State 79

   29 expr: expr SUB . mult_expr

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    mult_expr  go to state 108
    term       go to state 53


State 80

   28 expr: expr ADD . mult_expr

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    mult_expr  go to state 109
    term       go to state 53


State 81

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 82

   48 comp: NEQ .

    $default  reduce using rule 48 (comp)


State 83

   44 comp: LT .

    $default  reduce using rule 44 (comp)


State 84

   45 comp: GT .

    $default  reduce using rule 45 (comp)


State 85

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


State 86

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 87

   53 rel_expr: expr comp . expr

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 110
    mult_expr  go to state 52
    term       go to state 53


State 88

   33 mult_expr: mult_expr MULT . term

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident  go to state 49
    var    go to state 50
    term   go to state 111


State 89

   32 mult_expr: mult_expr DIV . term

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident  go to state 49
    var    go to state 50
    term   go to state 112


State 90

   31 mult_expr: mult_expr MOD . term

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident  go to state 49
    var    go to state 50
    term   go to state 113


State 91

   17 stat: IF bool_expr THEN . stats ENDIF
   21     | IF bool_expr THEN . stats ELSE stats ENDIF

    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 12 (stats)

    ident  go to state 37
    stats  go to state 114
    stat   go to state 39
    vars   go to state 40
    var    go to state 41


State 92

   50 bool_expr: bool_expr OR . rel_and_expr

    NOT         shift, and go to state 43
    TRUE        shift, and go to state 44
    FALSE       shift, and go to state 45
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 47
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident         go to state 49
    var           go to state 50
    expr          go to state 51
    mult_expr     go to state 52
    term          go to state 53
    rel_and_expr  go to state 115
    rel_expr      go to state 56


State 93

   52 rel_and_expr: rel_and_expr AND . rel_expr

    NOT         shift, and go to state 43
    TRUE        shift, and go to state 44
    FALSE       shift, and go to state 45
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 47
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 51
    mult_expr  go to state 52
    term       go to state 53
    rel_expr   go to state 116


State 94

   22 stat: WHILE bool_expr BEGINLOOP . stats ENDLOOP

    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 12 (stats)

    ident  go to state 37
    stats  go to state 117
    stat   go to state 39
    vars   go to state 40
    var    go to state 41


State 95

   18 stat: DO BEGINLOOP stats . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 118


State 96

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   38 term: L_PAREN expr . R_PAREN

    SUB      shift, and go to state 79
    ADD      shift, and go to state 80
    R_PAREN  shift, and go to state 104


State 97

   26 var: ident L_BRACKET expr . R_BRACKET
   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr

    SUB        shift, and go to state 79
    ADD        shift, and go to state 80
    R_BRACKET  shift, and go to state 119


State 98

   13 stats: stat SEMICOLON stats .

    $default  reduce using rule 13 (stats)


State 99

   15 stat: vars ASSIGN expr .
   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr

    SUB  shift, and go to state 79
    ADD  shift, and go to state 80

    $default  reduce using rule 15 (stat)


State 100

   24 vars: var COMMA vars .

    $default  reduce using rule 24 (vars)


State 101

   50 bool_expr: bool_expr . OR rel_and_expr
   60 rel_expr: NOT L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 92
    R_PAREN  shift, and go to state 120


State 102

   57 rel_expr: NOT expr comp . expr

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 121
    mult_expr  go to state 52
    term       go to state 53


State 103

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   41 term: SUB L_PAREN expr . R_PAREN

    SUB      shift, and go to state 79
    ADD      shift, and go to state 80
    R_PAREN  shift, and go to state 122


State 104

   38 term: L_PAREN expr R_PAREN .

    $default  reduce using rule 38 (term)


State 105

   56 rel_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 56 (rel_expr)


State 106

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   34 exprs: expr .
   35      | expr . COMMA exprs

    SUB    shift, and go to state 79
    ADD    shift, and go to state 80
    COMMA  shift, and go to state 123

    $default  reduce using rule 34 (exprs)


State 107

   42 term: ident L_PAREN exprs . R_PAREN

    R_PAREN  shift, and go to state 124


State 108

   29 expr: expr SUB mult_expr .
   31 mult_expr: mult_expr . MOD term
   32          | mult_expr . DIV term
   33          | mult_expr . MULT term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 29 (expr)


State 109

   28 expr: expr ADD mult_expr .
   31 mult_expr: mult_expr . MOD term
   32          | mult_expr . DIV term
   33          | mult_expr . MULT term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 28 (expr)


State 110

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   53 rel_expr: expr comp expr .

    SUB  shift, and go to state 79
    ADD  shift, and go to state 80

    $default  reduce using rule 53 (rel_expr)


State 111

   33 mult_expr: mult_expr MULT term .

    $default  reduce using rule 33 (mult_expr)


State 112

   32 mult_expr: mult_expr DIV term .

    $default  reduce using rule 32 (mult_expr)


State 113

   31 mult_expr: mult_expr MOD term .

    $default  reduce using rule 31 (mult_expr)


State 114

   17 stat: IF bool_expr THEN stats . ENDIF
   21     | IF bool_expr THEN stats . ELSE stats ENDIF

    ENDIF  shift, and go to state 125
    ELSE   shift, and go to state 126


State 115

   50 bool_expr: bool_expr OR rel_and_expr .
   52 rel_and_expr: rel_and_expr . AND rel_expr

    AND  shift, and go to state 93

    $default  reduce using rule 50 (bool_expr)


State 116

   52 rel_and_expr: rel_and_expr AND rel_expr .

    $default  reduce using rule 52 (rel_and_expr)


State 117

   22 stat: WHILE bool_expr BEGINLOOP stats . ENDLOOP

    ENDLOOP  shift, and go to state 127


State 118

   18 stat: DO BEGINLOOP stats ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 128


State 119

   26 var: ident L_BRACKET expr R_BRACKET .

    $default  reduce using rule 26 (var)


State 120

   60 rel_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 60 (rel_expr)


State 121

   28 expr: expr . ADD mult_expr
   29     | expr . SUB mult_expr
   57 rel_expr: NOT expr comp expr .

    SUB  shift, and go to state 79
    ADD  shift, and go to state 80

    $default  reduce using rule 57 (rel_expr)


State 122

   41 term: SUB L_PAREN expr R_PAREN .

    $default  reduce using rule 41 (term)


State 123

   35 exprs: expr COMMA . exprs

    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 61
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident      go to state 49
    var        go to state 50
    expr       go to state 106
    mult_expr  go to state 52
    exprs      go to state 129
    term       go to state 53


State 124

   42 term: ident L_PAREN exprs R_PAREN .

    $default  reduce using rule 42 (term)


State 125

   17 stat: IF bool_expr THEN stats ENDIF .

    $default  reduce using rule 17 (stat)


State 126

   21 stat: IF bool_expr THEN stats ELSE . stats ENDIF

    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 12 (stats)

    ident  go to state 37
    stats  go to state 130
    stat   go to state 39
    vars   go to state 40
    var    go to state 41


State 127

   22 stat: WHILE bool_expr BEGINLOOP stats ENDLOOP .

    $default  reduce using rule 22 (stat)


State 128

   18 stat: DO BEGINLOOP stats ENDLOOP WHILE . bool_expr

    NOT         shift, and go to state 43
    TRUE        shift, and go to state 44
    FALSE       shift, and go to state 45
    SUB         shift, and go to state 46
    L_PAREN     shift, and go to state 47
    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    ident         go to state 49
    var           go to state 50
    expr          go to state 51
    mult_expr     go to state 52
    term          go to state 53
    bool_expr     go to state 131
    rel_and_expr  go to state 55
    rel_expr      go to state 56


State 129

   35 exprs: expr COMMA exprs .

    $default  reduce using rule 35 (exprs)


State 130

   21 stat: IF bool_expr THEN stats ELSE stats . ENDIF

    ENDIF  shift, and go to state 132


State 131

   18 stat: DO BEGINLOOP stats ENDLOOP WHILE bool_expr .
   50 bool_expr: bool_expr . OR rel_and_expr

    OR  shift, and go to state 92

    $default  reduce using rule 18 (stat)


State 132

   21 stat: IF bool_expr THEN stats ELSE stats ENDIF .

    $default  reduce using rule 21 (stat)
